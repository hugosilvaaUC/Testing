import { DataExchangeSetting } from '../Settings/interfaces';
import { DataTransferObject } from '../DataFacade/interfaces';
export default class EventDispatcher {
    private static instance;
    private dataLayerNames;
    private windowEventNames;
    private dataLayer;
    private blockDataLayerPush;
    private constructor();
    static getInstance(): EventDispatcher;
    /**
     * When activated, events will be pushed to the data layer
     *
     * @param shouldBlock
     */
    setBlockDataLayerPush(shouldBlock: boolean): void;
    /**
     * Determine if data layer pushes on deny is enabled
     */
    shouldBlockDataLayerPush(): boolean;
    static resetInstance(): void;
    init(dataExchangeSettings: DataExchangeSetting[]): void;
    setDataLayer(data: Window, dataLayerName: string): void;
    getDataLayer(): Map<string, any>;
    dispatch(dataTransferObjects: DataTransferObject[], isConsentModeEnabled?: boolean): void;
    private isValidDataLayer;
    private pushEventsToDataLayer;
    private dispatchWindowEvents;
}
