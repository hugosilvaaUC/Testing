import { InitOptions, InitialUIValues, UI_LAYER, UI_VARIANT } from '../../interfaces';
import { LegacyCcpa, LegacySettings } from '../Settings/interfaces';
export default class UIService {
    private static instance;
    initOptions: InitOptions | null;
    isFirstTimePageVisit: boolean;
    selectedLayer: UI_LAYER | null;
    shouldAcceptAllImplicitly: boolean | null;
    shouldShowFirstLayerOnVersionChange: boolean;
    variant: UI_VARIANT | null;
    private ampInstance;
    private botInstance;
    private locationInstance;
    private settingsV2;
    private constructor();
    static getInstance(): UIService;
    static resetInstance(): void;
    init(legacySettings: LegacySettings, options: InitOptions): Promise<InitialUIValues>;
    isFirstTimeVisit(): boolean;
    shouldShowNone(): Promise<boolean>;
    shouldShowFirstLayer(legacySettings: Pick<LegacySettings, 'ccpa'>): Promise<boolean>;
    shouldForceReshowGDPRBanner(): boolean;
    shouldShowPrivacyButton(legacySettings: Pick<LegacySettings, 'privacyButtonIsVisible'>): boolean;
    resolveUiVariant(ccpa: Pick<LegacyCcpa, 'isActive' | 'region'>, tcf2Enabled: boolean): Promise<UI_VARIANT>;
    resolveUiInitialLayer(legacySettings: Pick<LegacySettings, 'ccpa' | 'privacyButtonIsVisible'>): Promise<UI_LAYER>;
    resolveUIOptions(legacySettings: Pick<LegacySettings, 'ccpa' | 'tcf2Enabled' | 'privacyButtonIsVisible'>): Promise<InitialUIValues>;
    shouldShowFirstLayerForCcpa(reshowAfterDays?: number): boolean;
}
