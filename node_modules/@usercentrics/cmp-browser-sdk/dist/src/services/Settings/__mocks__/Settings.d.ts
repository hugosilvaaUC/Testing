import { Category, Service, Settings } from '../interfaces';
import { CcpaOptions } from '../models';
import { DataTransferSettings } from '../../../modules/helpers';
export default class SettingsService {
    private static instance;
    private settings;
    private constructor();
    static getInstance(): SettingsService;
    static resetInstance(): void;
    getSettings(): Settings;
    setSettings(settings: Settings): void;
    getBaseSettings(): Settings;
    getCategories(): Category[];
    getNonEssentialCategories(): Category[];
    getCcpaSettings(): CcpaOptions | null;
    getControllerId(): string;
    mergeServicesIntoExistingCategories(updatedServices: Service[]): Category[];
    getServicesFromCategories(categories: Category[]): Service[];
    getServices(): Service[];
    getServicesWithConsent(): Service[];
    isTcfEnabled(): boolean;
    isTcfAvailable(): boolean;
    setIsTcfEnabled(value: boolean): void;
    isCcpaEnabled(): boolean;
    isCcpaAvailable(): boolean;
    isCrossDomainEnabled(): boolean;
    updateDataTransferSettings(value: DataTransferSettings): void;
    setCategories(categories: Category[]): void;
}
