import { Category, DataExchangeSetting, LegacySettings, Settings } from '../interfaces';
import { CcpaUISettings, DefaultUISettings, TCFUISettings } from './UISettings';
import { CcpaOptions } from './Ccpa/interfaces/interfaces.public';
import { TCFOptions } from './TCF/interfaces/interfaces.public';
import { UI_VARIANT } from '../../..';
import { VERSION } from '../enums';
declare class SettingsModel implements Settings {
    acceptAllImplicitlyOutsideEU: boolean;
    categories: Category[];
    ccpa: CcpaOptions | null;
    consentSharingIFrameIsActive: boolean;
    controllerId: string;
    dataExchangeSettings: DataExchangeSetting[];
    googleConsentMode: boolean;
    id: string;
    interactionAnalyticsEnabled: boolean;
    isCcpaEnabled: boolean;
    isTagLoggerActive: boolean;
    isTcfEnabled: boolean;
    reshowBanner: number;
    showFirstLayerOnVersionChange: VERSION[];
    tcf: TCFOptions | null;
    ui: CcpaUISettings | DefaultUISettings | TCFUISettings;
    version: string;
    constructor(legacySettings: LegacySettings, uiVariant: UI_VARIANT, controllerId: string);
}
export default SettingsModel;
